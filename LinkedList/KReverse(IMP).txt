package linkedlist;

import java.util.Scanner;

public class ReverseKNodes {

	public static LinkedListNode<Integer> takeInput(){
		Scanner sc=new Scanner(System.in);
		System.out.println("Enter the size of the LL");
		int size=sc.nextInt();
		LinkedListNode<Integer>head=null;
		LinkedListNode<Integer>tail=null;

		for(int i=0;i<size;i++) {
			System.out.println("Enter the data");
			int ele=sc.nextInt();
			if(head==null) {
				head=new LinkedListNode<Integer>(ele);
				tail=head;
			}
			else {
				LinkedListNode<Integer>newNode=new LinkedListNode<Integer>(ele);
				tail.next=newNode;
				tail=tail.next;
			}
		}

		return head;
	}

	public static LinkedListNode<Integer> reverse(LinkedListNode<Integer>head){

		if(head.next==null|| head==null) {
			return head;
		}

		LinkedListNode<Integer>newHead=reverse(head.next);
		
		head.next=null;
		
		LinkedListNode<Integer>newTail=head;

		LinkedListNode<Integer>cur=newHead;

		while(cur.next!=null) {
			cur=cur.next;
		}

		cur.next=newTail;
		
		return newHead;


	}

	public static void print(LinkedListNode<Integer>head) {
		LinkedListNode<Integer>cur=head;
		while(cur!=null) {

			System.out.print(cur.data+" ");

			cur=cur.next;
		}
	}

	
	public static LinkedListNode<Integer> reversek(LinkedListNode<Integer>head,int k){
		
		if(head==null || head.next==null) {
			return head;
		}
		
		LinkedListNode<Integer>cur=head;
		LinkedListNode<Integer>ptr=head;
		
		for(int i=0;i<k-1;i++) {
			if(cur.next==null) {
				break;
			}
			cur=cur.next;
		}
		
		LinkedListNode<Integer> next_to_cur=cur.next;
		cur.next=null;
		LinkedListNode<Integer>newHead=reverse(ptr);
		ptr.next=reversek(next_to_cur, k);
		return newHead;
		
		
		
		
	}
	

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		LinkedListNode<Integer>head=takeInput();
		//print(head);
		//reverse(head);
		//System.out.println();
		//print(reverse(head));
		print(reversek(head,3));

	}

}
