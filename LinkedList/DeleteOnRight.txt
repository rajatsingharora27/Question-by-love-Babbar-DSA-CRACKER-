package linkedlist;

import java.util.Scanner;

public class DeleteOnRight {
	public static LinkedListNode<Integer> takeInput(){
		Scanner sc=new Scanner(System.in);
		System.out.println("Enter the size of the LL");
		int size=sc.nextInt();
		LinkedListNode<Integer>head=null;
		LinkedListNode<Integer>tail=null;

		for(int i=0;i<size;i++) {
			System.out.println("Enter the data");
			int ele=sc.nextInt();
			if(head==null) {
				head=new LinkedListNode<Integer>(ele);
				tail=head;
			}
			else {
				LinkedListNode<Integer>newNode=new LinkedListNode<Integer>(ele);
				tail.next=newNode;
				tail=tail.next;
			}
		}

		return head;
	}

	public static LinkedListNode<Integer> reverse(LinkedListNode<Integer>head){
		if( head.next==null|| head==null ) {
			return head;
		}

		LinkedListNode<Integer>temphead=reverse(head.next);
		LinkedListNode<Integer> ptr=head;
		while(ptr.next!=null) {
			ptr=ptr.next;
		}
		ptr.next=head;
		head.next=null;
		head=temphead;
		return head;

	}

	public static LinkedListNode<Integer> compute(LinkedListNode<Integer>head){

		head=reverse(head);

		LinkedListNode<Integer>max=head;

		LinkedListNode<Integer>cur=head.next;
		LinkedListNode<Integer>ptr=null;
		while( cur!=null) {

			if(cur.data<max.data) {
				max.next=cur.next;
				
			}
			else {
				max=cur;
				//cur.next=null;
			}

			//ptr=cur;
			cur=cur.next;
		}

		return reverse(head);
	}
	
	public static void print(LinkedListNode<Integer>head) {

		LinkedListNode<Integer>tail=head;
		while(tail!=null) {
			System.out.print(tail.data+" ");
			tail=tail.next;
		}	
	}

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		LinkedListNode<Integer>head=takeInput();
		print(head);
		System.out.println();
		print(compute(head));
	}

}
