package linkedlist;

import java.util.Scanner;

public class FindIntersection {

	public static LinkedListNode<Integer> takeInput(){
		Scanner sc=new Scanner(System.in);
		System.out.println("Enter the size of the LL");
		int size=sc.nextInt();
		LinkedListNode<Integer>head=null;
		LinkedListNode<Integer>tail=null;

		for(int i=0;i<size;i++) {
			System.out.println("Enter the data");
			int ele=sc.nextInt();
			if(head==null) {
				head=new LinkedListNode<Integer>(ele);
				tail=head;
			}
			else {
				LinkedListNode<Integer>newNode=new LinkedListNode<Integer>(ele);
				tail.next=newNode;
				tail=tail.next;
			}
		}

		return head;
	}


	public static LinkedListNode<Integer> intersection(LinkedListNode<Integer>head1,LinkedListNode<Integer>head2){


		LinkedListNode<Integer>ptr1=head1;
		LinkedListNode<Integer>ptr2=head2;

		LinkedListNode<Integer>newhead=null;
		LinkedListNode<Integer>newTail=null;


		while(ptr1!=null && ptr2!=null) {


			if(ptr1.data==ptr2.data) {

				if(newhead==null) {
					newhead=new LinkedListNode<Integer>(ptr1.data);
					newTail=newhead;
				}
				else {

					LinkedListNode<Integer>newNode=new LinkedListNode<Integer>(ptr1.data);
					newTail.next=newNode;
					newTail=newTail.next;
				}
				
				ptr1=ptr1.next;
				
				ptr2=ptr2.next;
				
			}
			else if(ptr1.data>ptr2.data) {
				
				ptr2=ptr2.next;
				
			}
			else {
				ptr1=ptr1.next;
			}
		}
		
		return newhead;









	}






	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}
